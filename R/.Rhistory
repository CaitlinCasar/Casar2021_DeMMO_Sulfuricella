geom_treescale() +
scale_color_manual(values = taxa_colors)
trees[[i]] <- colored_tree
}
files
View(genome_summary)
c(genome_summary %>% select(NCBI_family) %>% distinct() %>% pull() , 0)
genome_summary %>% select(NCBI_family) %>% filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae") %>%distinct() %>% pull()
genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull()
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull())
tree_taxa
length(tree_taxa -2)
length(tree_taxa) -2
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- c(genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull() , 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
taxa_colors
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
taxa_colors
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
#geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors)
trees[[i]] <- colored_tree
}
trees[1]
dirs
str_extract(dirs[1], "(?<=/tree_iterations/)(.*)")
i = 1
names(trees)[[i]] <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
names(trees)
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
#geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors)
trees[[i]] <- colored_tree
names(trees)[[i]] <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
}
names(trees)
which(names(trees) %in% str_detect(names(trees), "universal"))
str_detect(names(trees), "universal")
trees[str_detect(names(trees), "universal")]
#plot universal trees
ggplot::grid.arrange(trees[1], trees[2], nrow = 1)
#plot universal trees
ggplot2::grid.arrange(trees[1], trees[2], nrow = 1)
#plot universal trees
gridExtra::grid.arrange(trees[1], trees[2], nrow = 1)
cowplot::plot_grid(trees[1], trees[2])
trees[1]
trees[[1]]
#plot universal trees
gridExtra::grid.arrange(trees[[1]], trees[[2]], nrow = 1)
#plot universal trees
gridExtra::grid.arrange(trees[[1]], trees[[6]], nrow = 1)
trees[str_detect(names(trees), "universal")]
test <- trees[str_detect(names(trees), "universal")]
test
typeof(test)
universal_trees <- trees[str_detect(names(trees), "universal")]
gridExtra::grid.arrange(universal_trees, nrow = 3)
gridExtra::grid.arrange(unlist(universal_trees), nrow = 3)
#plot universal trees
universal_trees <- unlist(trees[str_detect(names(trees), "universal")])
typeof(test)
typeof(universal_trees)
#plot universal trees
universal_trees <- trees[str_detect(names(trees), "universal")]
gridExtra::arrangeGrob(grobs = universal_trees, nrow = 3)
universal_plots <- gridExtra::arrangeGrob(grobs = universal_trees, nrow = 3)
gridExtra::grid.arrange(universal_plots)
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
#geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
#plot universal trees
universal_trees <- trees[str_detect(names(trees), "universal")]
universal_plots <- gridExtra::arrangeGrob(grobs = universal_trees, nrow = 3)
gridExtra::grid.arrange(universal_plots)
tree_types <- c("beta", "proteo", "universal")
for(i in 1:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
tree_figure <- gridExtra::grid.arrange(tree_plots)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 10, height = 7)
tree_figure
dev.off()
}
trees_list <- trees[str_detect(names(trees), tree_types[i])]
trees_list
i = 2
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
tree_figure <- gridExtra::grid.arrange(tree_plots)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 10, height = 7)
tree_figure
dev.off()
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
tree_figure <- gridExtra::grid.arrange(tree_plots)
pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
width = 10, height = 7)
tree_figure
dev.off()
}
tree_figure
tree_figure <- gridExtra::grid.arrange(tree_plots)
tree_types <- c("beta", "proteo", "universal")
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 10, height = 7)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
tree_types <- c("beta", "proteo", "universal")
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 14)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
tree_types <- c("beta", "proteo", "universal")
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 30)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("black",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
#geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
#plot trees by type
tree_types <- c("beta", "proteo", "universal")
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 30)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("gray",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
#plot trees by type
tree_types <- c("beta", "proteo", "universal")
for(i in 2:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 30)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
pacman::p_load(tidyverse, ggtree, ape, extrafont, readxl)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("gray",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
#plot trees by type
tree_types <- c("beta", "proteo", "universal")
for(i in 1:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 30)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
dirs
names(trees)
length(trees)
dirs
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("gray",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
message(paste0("importing ", tree_title, "..."))
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("gray",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
tree
is.na(tree)
is.null(tree)
dirs <- list.dirs("../data/tree/tree_iterations", recursive = F)
trees <- list()
for(i in 1:length(dirs)){
files <- list.files(dirs[i], full.names = T)
tree_title <- str_extract(dirs[i], "(?<=/tree_iterations/)(.*)")
message(paste0("importing ", tree_title, "..."))
#read tree data
tree <- read.tree(files[str_detect(files, "[.]tre")])
if(!is.null(tree)){
genome_summary <- read_delim(files[str_detect(files, "summary_info")], delim = "\t")  %>%
mutate(NCBI_family = if_else(NCBI_order == "Nitrosomonadales", NCBI_family, NCBI_order),
NCBI_family = if_else(label == "Candidatus_Gallionella_acididurans", "Gallionellaceae", NCBI_family),
NCBI_species = if_else(label == "Candidatus_Gallionella_acididurans", "Candidatus Gallionella acididurans", NCBI_species),
NCBI_family = if_else(label ==  'bin_1_Betaproteobacteria', "Sulfuricellaceae", NCBI_family),
NCBI_species = if_else(label == "bin_1_Betaproteobacteria", "Sulfuricella sp. D3-1", NCBI_species))
taxa <- data.frame(label = tree$tip.label) %>%
left_join(genome_summary)
tree$tip.label <- taxa %>%
mutate(label = NCBI_species) %>%
pull()
groups <- split(tree$tip.label, taxa$NCBI_family)
grouped_tree <- groupOTU(tree,  groups)
tree_taxa <- c("Sulfuricellaceae", "Gallionellaceae", genome_summary %>% select(NCBI_family) %>%
filter(!NCBI_family %in% c("Sulfuricellaceae", "Gallionellaceae")) %>%
distinct() %>% pull(), 0)
taxa_colors <- c("#DAA520", "#da3c20", rep("gray",length(tree_taxa) -2))
names(taxa_colors) <- tree_taxa
colored_tree <- ggtree(grouped_tree, aes(color=group, label = group))+
geom_text2(aes(subset=!isTip, label=node), hjust=-.3, size = 2) +
geom_nodelab(size = 3, col= "black", hjust = -.3) +
geom_tiplab(size = 3) +
geom_treescale() +
scale_color_manual(values = taxa_colors) +
ggtitle(tree_title)
trees[[i]] <- colored_tree
names(trees)[[i]] <- tree_title
}
}
names(trees)
is.null(trees)
is.null(names(trees))
which(is.null(trees))
which(is.null(names(trees)))
#plot trees by type
tree_types <- c("beta", "proteo", "universal")
for(i in 1:length(tree_types)){
trees_list <- trees[str_detect(names(trees), tree_types[i])]
tree_plots <- gridExtra::arrangeGrob(grobs = trees_list, nrow = 3)
cairo_pdf(paste0("../figures/", tree_types[i], "_tree_iterations.pdf"),
family="Arial Unicode MS",
width = 20, height = 30)
gridExtra::grid.arrange(tree_plots)
dev.off()
}
